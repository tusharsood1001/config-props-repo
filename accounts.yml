server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  # telling micrometer/promethus to group metrics related to accounts under application name. 
  metrics:
    tags:
      application: ${spring.application.name}

# these props would be available under actuator/info url
info:
  app:
    name: accounts
    description: TS Bank Accounts Application
    version: 1.0.0

# these are needed when we need to integrate the circuit breaker patterns with feign clients, need to test for bulkhead.
spring:
  cloud:
    stream:
      bindings:
        function:
          definition: updateCommunication
        #publisher
        sendCommunication-out-0:
          #exchange name where message would be published
          destination: send-communication
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
      kafka:
        binder:
          brokers:
            - localhost:9092
    circuitbreaker:
      bulkhead:
        resilience4j:
          enabled: true
    openfeign:
      circuitbreaker:
        enabled: true
  #datasource:
    # was not required on locallly but , needed when started inside a container, ignore this comment.
    # spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect -> can specify this up its optional
    #driver-class-name: com.mysql.cj.jdbc.Driver
  h2:
    console:
      enabled: true  
  jpa:
    #database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      # this props is not required when using in mem DBs like H2
      # when using non in mem DBs, this rops specifies, that all classes annotated with entity should be created.
      # default value is none, which expects that, table should already exists.
      ddl-auto: update
    show-sql: true    
    properties:
      hibernate:
        format_sql: true
        generate_statistics: true
    #   ddl-auto: create
    

build:
  version: 3.0

accounts:
  message: "Welcome to Ts Bank's Account related APIs"
  contactDetails:
    name: Tushar Sood - devloper
    email: ts@gmail.com
  onCallSupport:
    - (555) 555-1234
    - (555) 555-1235
